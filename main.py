import telebot
from telebot import types
import webbrowser
import os

bot = telebot.TeleBot('6776079456:AAHjPEbBYIAhyOgLNounK9zQMSTHaWXSyho')
login = '123'
password = '123'
wastes = list() ##—Å–ø–∏—Å–æ–∫ —Ç—Ä–∞—Ç
purpose = 0## —Ü–µ–ª—å
fillpur = 0## –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–µ–ª–∏
prflag = 0 ## —Ñ–ª–∞–≥ —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–ª–∏
frflag = 0 ## —Ñ–ª–∞–≥ –∑–∞–º–æ—Ä–æ–∑–∫–∏
regflag = 0 ## —Ñ–ª–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
regerr = 0 ## —Ñ–ª–∞–≥ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è
bank = 0 ## –æ–±—â–∏–π —Å—á–µ—Ç
convert = 0 ## –∫–æ–Ω–≤–µ—Ä—Ç
isboxcreated = 0 ## —Ñ–ª–∞–≥ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞
inoutflag = 0 ## —Ñ–ª–∞–≥ –Ω–∞ –≤–≤–æ–¥/–≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –æ–±—â–µ–≥–æ —Å—á–µ—Ç–∞
inoutflagcon = 0 ## —Ñ–ª–∞–≥ –Ω–∞ –≤–≤–æ–¥/–≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞
in_error = 0 ## —Ñ–ª–∞–≥ –Ω–∞ –æ—à–∏–±–∫—É –≤–≤–æ–¥–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ

##–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
@bot.message_handler(commands = ['start'])
def start(message):
    global regerr
    if regerr == 0 and regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –≤–∞—à —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n'
                                          '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n', reply_markup=markup)
    elif regerr == 1 and regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', reply_markup=markup)
        regerr = 0
    elif regerr == 0 and regflag == 1:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å.', reply_markup=markup)



@bot.message_handler(commands = ['exit'])
def exit(message):
    global regflag
    if regflag == 1:
        regflag = 0
        bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ —Å –ø—Ä–æ—Ñ–∏–ª—è.')
        start(message)
    elif regflag == 0:
        bot.send_message(message.chat.id, '–í—ã –µ—â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å.')
        start(message)


@bot.message_handler(commands = ['freezing'])
def freezing(message):
    global frflag
    if regflag == 1:
        if frflag == 0:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '‚ùÑÔ∏è–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω.', reply_markup=markup)
            frflag = 1
        elif frflag == 1:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '‚ùÑÔ∏è–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç —Ä–∞–∑–º–æ—Ä–æ–∂–µ–Ω.', reply_markup=markup)
            frflag = 0
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)


@bot.message_handler(commands = ['createpurpose'])
def precreate(message):
    if regflag == 1:
        if prflag == 0:
            bot.send_message(message.chat.id, '–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å?')
            bot.register_next_step_handler(message, create)
        elif prflag == 1:
            markup = telebot.types.InlineKeyboardMarkup()
            btn1 = telebot.types.InlineKeyboardButton('–ö —Ü–µ–ª–∏', callback_data='showpurpose')
            btn2 = telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu')
            markup.row(btn1,btn2)
            bot.send_message(message.chat.id, '–¶–µ–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞.', reply_markup=markup)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)


def create(message):
    global purpose
    global prflag
    mess = message.text
    if mess.isdigit() == True:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(message.chat.id, '‚úèÔ∏è–¶–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.', reply_markup=markup)
        purpose = int(mess)
        prflag = 1
    elif mess.isdigit() == False and mess[0] == '-':
        bot.send_message(message.chat.id, '–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å –Ω–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É!')
        precreate(message)
    elif mess.isdigit() == False:
        bot.send_message(message.chat.id, '–í–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞!')
        precreate(message)


@bot.message_handler(commands=['showpurpose'])
def showpurpose(message):
    if regflag == 1:
        if prflag == 1:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, f'üìä–î–∞–Ω–Ω—ã–µ –ø–æ –≤–∞—à–µ–π —Ü–µ–ª–∏:\n'
                                              '–í—ã–ø–æ–ª–Ω–µ–Ω–æ:' + str(fillpur) + '/' + str(purpose) + '—Ä', reply_markup=markup)
        else:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '–¶–µ–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞.',
                             reply_markup=markup)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)


@bot.message_handler(commands=['editpurpose'])
def preeditpurpose(message):
    if regflag == 1:
        if prflag == 1:
            bot.send_message(message.chat.id, 'üìé–í–∞—à–∞ —Ü–µ–ª—å: ' + str(purpose) + '—Ä\n'
                                                                             '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É —Ü–µ–ª—å:')
            bot.register_next_step_handler(message, editpurpose)
        elif prflag == 0:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å', callback_data='createpurpose'))
            bot.send_message(message.chat.id, '–¶–µ–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞.', reply_markup=markup)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)


def editpurpose(message):
    global purpose
    global prflag
    mess = message.text
    if mess.isdigit() == True:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(message.chat.id, '‚úèÔ∏è–¶–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞.', reply_markup=markup)
        purpose = int(mess)
    elif mess.isdigit() == False and mess[0] == '-':
        bot.send_message(message.chat.id, '–ù–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª—å –Ω–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É!')
        precreate(message)
    elif mess.isdigit() == False:
        bot.send_message(message.chat.id, '–í–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞!')
        precreate(message)


@bot.message_handler(commands=['deletepurpose'])
def delete(message):
    global prflag
    if regflag == 1:
        if prflag == 1:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '‚úèÔ∏è–¶–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.', reply_markup=markup)
            prflag = 0
        elif prflag == 0:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '–¶–µ–ª—å –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞.', reply_markup=markup)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)


@bot.message_handler(commands=['checkwastes'])
def check(message):
    global wastes
    if regflag == 1:
        summ = 0
        printing = 'üí≥–ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤:\n'
        for i in range (0, len(wastes)):
            if i != len(wastes) - 1:
                printing += str(wastes[i]) + '—Ä' + ', '
            elif i == len(wastes) - 1:
                printing += str(wastes[i]) + '—Ä'
            summ += wastes[i]
        printing += '\n –û–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤: ' + str(summ) + '—Ä'
        if len(wastes) > 0:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '' + printing, reply_markup=markup)
        elif len(wastes) == 0:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
            bot.send_message(message.chat.id, '–†–∞—Å—Ö–æ–¥–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –±—ã–ª–æ.', reply_markup=markup)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)

@bot.message_handler(commands = ['work'])
def work(message):
    if regflag == 1:
        bot.send_message(message.chat.id, 'üëçüèª–ü—Ä–∏—Å—Ç—É–ø–∏–º! –ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?\n'
                                          '‚úÖ/inoutmoney - –í–Ω–µ—Å–µ–Ω–∏e/–≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å—á–µ—Ç–∞\n'
                                          '‚úÖ/checkwastes - –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤\n'
                                          '‚úÖ/createbox - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç\n'
                                          '‚úÖ/inputcon - –í–Ω–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç\n'
                                          '‚úÖ/outputcon - –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞\n'
                                          '‚úÖ/showbalance - –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å—á–µ—Ç–µ\n'
                                          '‚úÖ/showallbalance - –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å—á–µ—Ç–µ –∏ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ\n'
                                          '‚úÖ/freezing - –ó–∞–º–æ—Ä–æ–∑–∏—Ç—å/—Ä–∞–∑–º–æ—Ä–æ–∑–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç\n'
                                          '‚úÖ/createpurpose - –°–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å\n'
                                          '‚úÖ/editpurpose - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ª—å\n'
                                          '‚úÖ/showpurpose - –ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–ª—å\n'
                                          '‚úÖ/deletepurpose - –£–¥–∞–ª–∏—Ç—å —Ü–µ–ª—å\n'
                                          '‚úÖ/exit - –í—ã–π—Ç–∏ —Å –ø—Ä–æ—Ñ–∏–ª—è\n'
                                          '‚úÖ/clean - –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å')
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)



##–≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
@bot.message_handler(commands = ['info'])
def info(message):
    bot.send_message(message.chat.id, '\U00002753–î–ª—è —á–µ–≥–æ –∂–µ –Ω—É–∂–µ–Ω —ç—Ç–æ—Ç –±–æ—Ç?\n1Ô∏è‚É£–í–æ-–ø–µ—Ä–≤—ã—Ö, –æ–Ω –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤–Ω–µ—Å—Ç–∏ –∏ —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞\n'
                         '2Ô∏è‚É£–í–æ-–≤—Ç–æ—Ä—ã—Ö, —Å –Ω–∏–º –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–¥–æ–±–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ —Ä–∞—Å—Ö–æ–¥—ã\n'
                         '3Ô∏è‚É£–í-—Ç—Ä–µ—Ç—å–∏—Ö, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∑–∞–≤–µ—Å—Ç–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç —Å —Ü–µ–ª—å—é –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –Ω–∞ –º–µ—á—Ç—É\n'
                         '4Ô∏è‚É£–í-—á–µ—Ç–≤–µ—Ä—Ç—ã—Ö, –≤ –æ–¥–Ω–æ –∫–∞—Å–∞–Ω–∏–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤–∞—à –Ω–∞—Å—Ç–æ—è—â–∏–π –±–∞–ª–∞–Ω—Å\n'
                         '5Ô∏è‚É£–í-–ø—è—Ç—ã—Ö, –≤—ã –ª–µ–≥–∫–æ —Å–º–æ–∂–µ—Ç–µ –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å/—Ä–∞–∑–º–æ—Ä–æ–∑–∏—Ç—å –≤–∞—à —Å—á–µ—Ç –¥–ª—è –µ–≥–æ –ø–æ–ª–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n'
                         '6Ô∏è‚É£–ù—É –∏ –Ω–∞–∫–æ–Ω–µ—Ü, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±–µ —Ü–µ–ª—å –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü\n'
                         '\U00002714–ò –≤—Å–µ —ç—Ç–æ —Ç–æ–ª—å–∫–æ —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º')


##–≤–≤–æ–¥-–≤—ã–≤–æ–¥ –¥–µ–Ω–µ–≥
@bot.message_handler(commands = ['inoutmoney'])
def inoutmoney(message):
    if regflag == 1 and frflag == 0:
        bot.send_message(message.chat.id, 'üìå–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\nüìå/input - –í–Ω–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏\nüìå/output - –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏')
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)
    elif regflag == 1 and frflag == 1:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(message.chat.id, '‚ùÑÔ∏è–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω. –í–Ω–µ—Å–µ–Ω–∏–µ –∏ —Å–Ω—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.', reply_markup=markup)

##–≤–Ω–µ—Å–µ–Ω–∏–µ –¥–µ–Ω–µ–≥
@bot.message_handler(commands = ['input'])
def input(message):
    global inoutflag
    if regflag == 1 and frflag == 0:
        inoutflag = 1
        bot.send_message(message.chat.id, 'üìå–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏?')
        bot.register_next_step_handler(message, show_balance)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)
    elif regflag == 1 and frflag == 1:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(message.chat.id, '‚ùÑÔ∏è–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω. –í–Ω–µ—Å–µ–Ω–∏–µ –∏ —Å–Ω—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.',
                         reply_markup=markup)
##—Å–Ω—è—Ç–∏–µ –¥–µ–Ω–µ–≥
@bot.message_handler(commands = ['output'])
def output(message):
    global inoutflag
    if regflag == 1 and frflag == 0:
        inoutflag = 0
        bot.send_message(message.chat.id, 'üìå–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å?\n –î–æ—Å—Ç—É–ø–Ω–æ –∫ —Å–ø–∏—Å–∞–Ω–∏—é: %d —Ä' % bank)
        bot.register_next_step_handler(message, show_balance)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)
    elif regflag == 1 and frflag == 1:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(message.chat.id, '‚ùÑÔ∏è–í–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω. –í–Ω–µ—Å–µ–Ω–∏–µ –∏ —Å–Ω—è—Ç–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.',
                         reply_markup=markup) 


@bot.message_handler(commands = ['createbox'])
def createbox(message):
    global isboxcreated
    global in_error
    if regflag == 1:
        if isboxcreated == 0:
            bot.send_message(message.chat.id, '‚úâÔ∏è–ö–æ–Ω–≤–µ—Ä—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.\n/inputcon - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç\n/outputcon - —Å–Ω—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞')
            isboxcreated = 1
        elif isboxcreated == 1 and in_error == 0:
            bot.send_message(message.chat.id, '‚úâÔ∏è–ö–æ–Ω–≤–µ—Ä—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω.\n/inputcon - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç\n/outputcon - —Å–Ω—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞')
        elif isboxcreated == 1 and in_error == 1:
            bot.send_message(message.chat.id, '‚úâÔ∏è–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n/inputcon - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç\n/outputcon - —Å–Ω—è—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞')
            in_error = 0
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)



@bot.message_handler(commands = ['inputcon'])
def inputcon(message):
    global inoutflagcon
    if regflag == 1:
        inoutflagcon = 1
        bot.send_message(message.chat.id, '‚úâÔ∏è–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫–æ–Ω–≤–µ—Ä—Ç?')
        bot.register_next_step_handler(message, convert_work)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)


@bot.message_handler(commands = ['outputcon'])
def outputcon(message):
    global inoutflagcon
    if regflag == 1:
        inoutflagcon = 0
        bot.send_message(message.chat.id, '‚úâÔ∏è–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å?\n–î–æ—Å—Ç—É–ø–Ω–æ –∫ —Å–ø–∏—Å–∞–Ω–∏—é —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞: %d —Ä' % convert)
        bot.register_next_step_handler(message, convert_work)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)




def convert_work(message):
    global convert
    global in_error
    global isboxcreated
    if isboxcreated == 1:
        mess = message.text
        if mess.isdigit() == True:
            if int(mess) >= 0:
                oldconv = convert
                if inoutflagcon == 1:
                    convert += int(mess)
                elif inoutflagcon == 0 and convert > int(mess):
                    convert -= int(mess)
                elif inoutflagcon == 0 and convert < int(mess):
                    in_error = 1
                    bot.send_message(message.chat.id, '‚ùó–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ')

                    createbox(message)

                if oldconv < convert:
                    markup = telebot.types.InlineKeyboardMarkup()
                    markup.add(telebot.types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balancecon'))
                    bot.send_message(message.chat.id, 'üìå–î–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã –≤ –∫–æ–Ω–≤–µ—Ä—Ç!', reply_markup=markup)

                elif oldconv == convert and int(mess) == 0:
                    in_error = 1
                    bot.send_message(message.chat.id, '‚ùó–Ø –Ω–µ –º–æ–≥—É –≤–Ω–µ—Å—Ç–∏ 0 —Ä—É–±–ª–µ–π‚ùó')

                    createbox(message)

                elif oldconv > convert:
                    markup = telebot.types.InlineKeyboardMarkup()
                    markup.add(telebot.types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balancecon'))
                    bot.send_message(message.chat.id, 'üìå–î–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç—ã —Å–æ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞!', reply_markup=markup)

        elif mess.isdigit() != True and mess[0] != '-':
            in_error = 1
            bot.send_message(message.chat.id, '‚ùó–í–ø–∏—Å—ã–≤–∞—Ç—å —Å—É–º–º—É –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞‚ùó')

            createbox(message)

        elif int(mess) < 0 and mess[0] == '-':
            in_error = 1
            bot.send_message(message.chat.id, '‚ùó–í—ã –≤–≤–µ–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É‚ùó')

            createbox(message)
    elif isboxcreated == 0:
        bot.send_message(message.chat.id, '‚ùó–ö–æ–Ω–≤–µ—Ä—Ç –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω‚ùó\n /createbox - —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç')



##–ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å
def show_balance(message):
    global bank
    global wastes
    global fillpur
    global purpose
    mess = message.text
    if mess.isdigit() == True:
        if int(mess) >= 0:
            oldbank = bank
            if inoutflag == 1:
                bank += int(mess)
                if prflag == 1:
                    fillpur += bank - oldbank
            elif inoutflag == 0 and bank > int(mess):
                bank -= int(mess)
                wastes.append(int(mess))
            elif inoutflag == 0 and bank < int(mess):
                bot.send_message(message.chat.id, '‚ùó–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞‚ùó')
                inoutmoney(message)

            if oldbank < bank and (fillpur < purpose or purpose == 0):
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(telebot.types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balance'))
                bot.send_message(message.chat.id, 'üìå–î–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã –Ω–∞ —Å—á–µ—Ç!', reply_markup=markup)
            elif oldbank < bank and fillpur >= purpose and purpose != 0:
                markup = telebot.types.InlineKeyboardMarkup()
                btn1 = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balance')
                btn2 = types.InlineKeyboardButton('–ö —Ü–µ–ª–∏', callback_data='showpurpose')
                markup.row(btn1,btn2)
                bot.send_message(message.chat.id, 'üìå–î–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã –Ω–∞ —Å—á–µ—Ç! \n'
                                                  'üéâ–ê —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ü–µ–ª—å. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!', reply_markup=markup)





            elif oldbank == bank and int(mess) == 0:
                bot.send_message(message.chat.id, '‚ùó–Ø –Ω–µ –º–æ–≥—É –≤–Ω–µ—Å—Ç–∏ 0 —Ä—É–±–ª–µ–π‚ùó')
                inoutmoney(message)

            elif oldbank > bank:
                markup = telebot.types.InlineKeyboardMarkup()
                markup.add(telebot.types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='balance'))
                bot.send_message(message.chat.id, 'üìå–î–µ–Ω—å–≥–∏ —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç—ã —Å–æ —Å—á–µ—Ç–∞!', reply_markup=markup)

    elif mess.isdigit() != True and mess[0] != '-':
        bot.send_message(message.chat.id, '‚ùó–í–ø–∏—Å—ã–≤–∞—Ç—å —Å—É–º–º—É –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞‚ùó')
        inoutmoney(message)

    elif int(mess) < 0 and mess[0] == '-':
        bot.send_message(message.chat.id, '‚ùó–í—ã –≤–≤–µ–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é —Å—É–º–º—É‚ùó')
        inoutmoney(message)

@bot.message_handler(commands = ['showbalance']) ##–ø–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞
def balance(message):
    if regflag == 1:
        bot.send_message(message.chat.id, '–í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å—á–µ—Ç–µ: %d —Ä' % bank)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)
        
@bot.message_handler(commands = ['showallbalance'])
def allbalance(message):
    if regflag == 1:
        bot.send_message(message.chat.id, '–í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å—á–µ—Ç–µ: %d —Ä' % bank)
        bot.send_message(message.chat.id, '–í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ: %d —Ä' % convert)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)





## —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–∏–Ω–∞
def reg_login(message):
    global login
    if message.text[0] != '/':
        if message.text == login:
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:')
            bot.register_next_step_handler(message, reg_password)
        elif message.text != login:
            bot.send_message(message.chat.id, '–õ–æ–≥–∏–Ω –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            start(message)

    else:
        global regerr
        regerr = 1
        bot.send_message(message.chat.id, '–õ–æ–≥–∏–Ω –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ –∑–Ω–∞–∫–∞ /.')
        start(message)


## —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è
def reg_password(message):
    global password
    if message.text[0] != '/':
        if message.text == password:
            markup = telebot.types.InlineKeyboardMarkup()
            markup.add(telebot.types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å', callback_data='enter'))
            bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ, —Ç–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.', reply_markup=markup)
        elif message.text != password:
            bot.send_message(message.chat.id, '–ü–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            start(message)
    else:
        global regerr
        regerr = 1
        bot.send_message(message.chat.id, '–ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ –∑–Ω–∞–∫–∞ /.')
        start(message)




##–≤—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–∞
@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    global wastes
    global purpose
    global fillpur
    global prflag
    global frflag
    global regflag
    global regerr
    global bank
    global convert
    global isboxcreated
    global inoutflag
    global inoutflagcon
    global in_error
    if call.data == 'balance':
        bot.send_message(call.message.chat.id, '–í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º —Å—á–µ—Ç–µ: %d —Ä' % bank)
    elif call.data == 'balancecon':
        bot.send_message(call.message.chat.id, '–í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ: %d —Ä' % convert)
    elif call.data == 'register':
        global login
        bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:')
        bot.register_next_step_handler(call.message, reg_login)
    elif call.data == 'enter':
        bot.send_message(call.message.chat.id, 'üéâ–û—Ç–ª–∏—á–Ω–æ, –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å! –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?\n'
                                          '/info - –≤—Å–µ –æ –±–æ—Ç–µ\n'
                                          '/work - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É')
        regflag = 1
    elif call.data == 'mainmenu':
        work(call.message)
    elif call.data == 'showpurpose':
        showpurpose(call.message)
    elif call.data == 'createpurpose':
        precreate(call.message)
    elif call.data == 'clean':
        wastes = list()  ##—Å–ø–∏—Å–æ–∫ —Ç—Ä–∞—Ç
        purpose = 0  ## —Ü–µ–ª—å
        fillpur = 0  ## –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–µ–ª–∏
        prflag = 0  ## —Ñ–ª–∞–≥ —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–ª–∏
        frflag = 0  ## —Ñ–ª–∞–≥ –∑–∞–º–æ—Ä–æ–∑–∫–∏
        regflag = 0  ## —Ñ–ª–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        regerr = 0  ## —Ñ–ª–∞–≥ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞ –ª–æ–≥–∏–Ω–∞/–ø–∞—Ä–æ–ª—è
        bank = 0  ## –æ–±—â–∏–π —Å—á–µ—Ç
        convert = 0  ## –∫–æ–Ω–≤–µ—Ä—Ç
        isboxcreated = 0  ## —Ñ–ª–∞–≥ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞
        inoutflag = 0  ## —Ñ–ª–∞–≥ –Ω–∞ –≤–≤–æ–¥/–≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –æ–±—â–µ–≥–æ —Å—á–µ—Ç–∞
        inoutflagcon = 0  ## —Ñ–ª–∞–≥ –Ω–∞ –≤–≤–æ–¥/–≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —Å –∫–æ–Ω–≤–µ—Ä—Ç–∞
        in_error = 0  ## —Ñ–ª–∞–≥ –Ω–∞ –æ—à–∏–±–∫—É –≤–≤–æ–¥–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–µ
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu'))
        bot.send_message(call.message.chat.id, '–°–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ.', reply_markup=markup)

@bot.message_handler(commands=['clean'])
def clean(message):
    global wastes, purpose, fillpur, prflag, frflag, regflag, regerr, bank, convert, isboxcreated, inoutflag, inoutflagcon, in_error
    if regflag == 1:
        markup = telebot.types.InlineKeyboardMarkup()
        btn1 = telebot.types.InlineKeyboardButton('–í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–±—Ä–æ—Å', callback_data='clean')
        btn2 = telebot.types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='mainmenu')
        markup.row(btn1,btn2)
        bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.', reply_markup=markup)
    elif regflag == 0:
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton('–í–æ–π—Ç–∏', callback_data='register'))
        bot.send_message(message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è!', reply_markup=markup)

bot.polling(non_stop=True)